"use strict";
;
function normalization_1(session, event, localParams) {
    var log = session.log;
    try {
        var fromURI = void 0;
        session.s_initialSIP_lib = event;
        fromURI = event.SIP.From.address.uri.user;
        log.debug("Log From-1: {}", fromURI);
        session.s_normalizedNumber = fromURI.substring(3, 11);
        return "success";
    }
    catch (e) {
        log.debug("Log: {}", e);
        return "error";
    }
}
function createXML(session, event, localParams) {
    var x;
    session.s_xml1 = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><sms><user><username>SendSMSwhileOff</username><password>Aa87!6179</password></user><source>019</source><destinations><phone>";
    session.s_xml2 = "</phone></destinations><message>test</message><response>0</response></sms>";
    session.s_xml = session.xml1 + session.normalizedNumber + session.xml2;
    return "success";
}
function extractAndCompare(session, event, localParams) {
    var log = session.log;
    try {
        var x = void 0;
        try {
            if (session.s_initialSIP.SIP["P-Access-Network-Info"].cellId != null)
                x = session.s_initialSIP.SIP["P-Access-Network-Info"].cellId;
            else
                return "error.PANIcellid.null";
        }
        catch (e) {
            return "error.noPANIcellid.exception";
        }
        if (x.substring(0, 5) == "42501") {
            session.w = "1";
            session.ann_name = "P3001";
        }
        else if (x.substring(0, 5) == "42503") {
            session.w = "2";
            session.ann_name = "P3002";
        }
        else {
            session.w = "3";
        }
        return session.w;
    }
    catch (e) {
        log.debug("Log: {}", e);
        return "error";
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxDQUFDO0FBQUEsU0FBUyxlQUFlLENBQUMsT0FBYSxFQUFFLEtBQVcsRUFBRSxXQUFnQjtJQUNuRSxJQUFJLEdBQUcsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDO0lBRXRCLElBQUk7UUFDRCxJQUFJLE9BQU8sU0FBUyxDQUFDO1FBQ3JCLE9BQU8sQ0FBQyxnQkFBZ0IsR0FBRyxLQUFLLENBQUM7UUFDakMsT0FBTyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDO1FBQzFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFDckMsT0FBTyxDQUFDLGtCQUFrQixHQUFHLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBRXRELE9BQU8sU0FBUyxDQUFDO0tBRW5CO0lBQUMsT0FBTyxDQUFDLEVBQUU7UUFFVCxHQUFHLENBQUMsS0FBSyxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUN4QixPQUFPLE9BQU8sQ0FBQztLQUNqQjtBQUNKLENBQUM7QUFHRCxTQUFTLFNBQVMsQ0FBQyxPQUFhLEVBQUUsS0FBVyxFQUFFLFdBQWdCO0lBRTVELElBQUksQ0FBVSxDQUFDO0lBQ2YsT0FBTyxDQUFDLE1BQU0sR0FBRSx5S0FBeUssQ0FBQztJQUUxTCxPQUFPLENBQUMsTUFBTSxHQUFFLDRFQUE0RSxDQUFDO0lBRTdGLE9BQU8sQ0FBQyxLQUFLLEdBQUUsT0FBTyxDQUFDLElBQUksR0FBRyxPQUFPLENBQUMsZ0JBQWdCLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQztJQUV0RSxPQUFPLFNBQVMsQ0FBQztBQUVwQixDQUFDO0FBRUQsU0FBUyxpQkFBaUIsQ0FBQyxPQUFhLEVBQUUsS0FBVyxFQUFFLFdBQWdCO0lBQ3BFLElBQUksR0FBRyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUM7SUFFdEIsSUFBSTtRQUNELElBQUksQ0FBQyxTQUFTLENBQUM7UUFDZixJQUFJO1lBQ0QsSUFBSyxPQUFPLENBQUMsWUFBWSxDQUFDLEdBQUcsQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDLE1BQU0sSUFBSSxJQUFJO2dCQUNsRSxDQUFDLEdBQUUsT0FBTyxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsdUJBQXVCLENBQUMsQ0FBQyxNQUFNLENBQUE7O2dCQUUzRCxPQUFPLHVCQUF1QixDQUFDO1NBQ3BDO1FBQUMsT0FBTyxDQUFDLEVBQUU7WUFDVCxPQUFPLDhCQUE4QixDQUFDO1NBQ3hDO1FBRUQsSUFBSSxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsSUFBRyxPQUFPLEVBQzlCO1lBQ0csT0FBTyxDQUFDLENBQUMsR0FBQyxHQUFHLENBQUM7WUFDZCxPQUFPLENBQUMsUUFBUSxHQUFDLE9BQU8sQ0FBQztTQUMzQjthQUNJLElBQUksQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLElBQUcsT0FBTyxFQUNuQztZQUNHLE9BQU8sQ0FBQyxDQUFDLEdBQUMsR0FBRyxDQUFDO1lBQ2QsT0FBTyxDQUFDLFFBQVEsR0FBQyxPQUFPLENBQUM7U0FDM0I7YUFDRztZQUNELE9BQU8sQ0FBQyxDQUFDLEdBQUMsR0FBRyxDQUFDO1NBQ2hCO1FBQ0QsT0FBTyxPQUFPLENBQUMsQ0FBQyxDQUFDO0tBQ25CO0lBQUMsT0FBTyxDQUFDLEVBQUU7UUFFVCxHQUFHLENBQUMsS0FBSyxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUN4QixPQUFPLE9BQU8sQ0FBQztLQUNqQjtBQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvL01BSU5CTE9DS1xuO2Z1bmN0aW9uIG5vcm1hbGl6YXRpb25fMShzZXNzaW9uIDogYW55LCBldmVudCA6IGFueSwgbG9jYWxQYXJhbXM6IGFueSApe1xuICAgbGV0IGxvZyA9IHNlc3Npb24ubG9nO1xuXG4gICB0cnkge1xuICAgICAgbGV0IGZyb21VUkkgOiBzdHJpbmc7XG4gICAgICBzZXNzaW9uLnNfaW5pdGlhbFNJUF9saWIgPSBldmVudDtcbiAgICAgIGZyb21VUkkgPSBldmVudC5TSVAuRnJvbS5hZGRyZXNzLnVyaS51c2VyOyAgLy85NzI1MDcwMDAxMThcbiAgICAgIGxvZy5kZWJ1ZyhcIkxvZyBGcm9tLTE6IHt9XCIsIGZyb21VUkkpO1xuICAgICAgc2Vzc2lvbi5zX25vcm1hbGl6ZWROdW1iZXIgPSBmcm9tVVJJLnN1YnN0cmluZygzLCAxMSk7XG5cbiAgICAgIHJldHVybiBcInN1Y2Nlc3NcIjtcblxuICAgfSBjYXRjaCAoZSkge1xuXG4gICAgICBsb2cuZGVidWcoXCJMb2c6IHt9XCIsIGUpO1xuICAgICAgcmV0dXJuIFwiZXJyb3JcIjtcbiAgIH1cbn1cblxuXG5mdW5jdGlvbiBjcmVhdGVYTUwoc2Vzc2lvbiA6IGFueSwgZXZlbnQgOiBhbnksIGxvY2FsUGFyYW1zOiBhbnkgKXtcblxuICAgbGV0IHggOiBzdHJpbmc7XG4gICBzZXNzaW9uLnNfeG1sMT0gXCI8P3htbCB2ZXJzaW9uPVxcXCIxLjBcXFwiIGVuY29kaW5nPVxcXCJVVEYtOFxcXCI/PjxzbXM+PHVzZXI+PHVzZXJuYW1lPlNlbmRTTVN3aGlsZU9mZjwvdXNlcm5hbWU+PHBhc3N3b3JkPkFhODchNjE3OTwvcGFzc3dvcmQ+PC91c2VyPjxzb3VyY2U+MDE5PC9zb3VyY2U+PGRlc3RpbmF0aW9ucz48cGhvbmU+XCI7XG5cbiAgIHNlc3Npb24uc194bWwyPSBcIjwvcGhvbmU+PC9kZXN0aW5hdGlvbnM+PG1lc3NhZ2U+dGVzdDwvbWVzc2FnZT48cmVzcG9uc2U+MDwvcmVzcG9uc2U+PC9zbXM+XCI7XG5cbiAgIHNlc3Npb24uc194bWw9IHNlc3Npb24ueG1sMSArIHNlc3Npb24ubm9ybWFsaXplZE51bWJlciArIHNlc3Npb24ueG1sMjtcblxuICAgcmV0dXJuIFwic3VjY2Vzc1wiO1xuXG59XG5cbmZ1bmN0aW9uIGV4dHJhY3RBbmRDb21wYXJlKHNlc3Npb24gOiBhbnksIGV2ZW50IDogYW55LCBsb2NhbFBhcmFtczogYW55ICl7XG4gICBsZXQgbG9nID0gc2Vzc2lvbi5sb2c7XG5cbiAgIHRyeSB7XG4gICAgICBsZXQgeCA6IHN0cmluZztcbiAgICAgIHRyeSB7XG4gICAgICAgICBpZiAoIHNlc3Npb24uc19pbml0aWFsU0lQLlNJUFtcIlAtQWNjZXNzLU5ldHdvcmstSW5mb1wiXS5jZWxsSWQgIT0gbnVsbClcbiAgICAgICAgICAgIHg9IHNlc3Npb24uc19pbml0aWFsU0lQLlNJUFtcIlAtQWNjZXNzLU5ldHdvcmstSW5mb1wiXS5jZWxsSWRcbiAgICAgICAgIGVsc2UgXG4gICAgICAgICAgICByZXR1cm4gXCJlcnJvci5QQU5JY2VsbGlkLm51bGxcIjtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgIHJldHVybiBcImVycm9yLm5vUEFOSWNlbGxpZC5leGNlcHRpb25cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKHguc3Vic3RyaW5nKDAsNSkgPT1cIjQyNTAxXCIpXG4gICAgICB7XG4gICAgICAgICBzZXNzaW9uLnc9XCIxXCI7XG4gICAgICAgICBzZXNzaW9uLmFubl9uYW1lPVwiUDMwMDFcIjtcbiAgICAgIH1cbiAgICAgIGVsc2UgaWYgKHguc3Vic3RyaW5nKDAsNSkgPT1cIjQyNTAzXCIpXG4gICAgICB7XG4gICAgICAgICBzZXNzaW9uLnc9XCIyXCI7XG4gICAgICAgICBzZXNzaW9uLmFubl9uYW1lPVwiUDMwMDJcIjtcbiAgICAgIH1cbiAgICAgIGVsc2V7XG4gICAgICAgICBzZXNzaW9uLnc9XCIzXCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gc2Vzc2lvbi53O1xuICAgfSBjYXRjaCAoZSkge1xuXG4gICAgICBsb2cuZGVidWcoXCJMb2c6IHt9XCIsIGUpO1xuICAgICAgcmV0dXJuIFwiZXJyb3JcIjtcbiAgIH1cbn1cbiJdfQ==