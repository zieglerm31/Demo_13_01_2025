"use strict";
;
function normalization_1(session, event, localParams) {
    var log = session.log;
    try {
        var fromURI = void 0;
        session.s_initialSIP_lib = event;
        fromURI = event.SIP.From.address.uri.user;
        log.debug("Log From-1: {}", fromURI);
        session.s_normalizedNumber = fromURI.substring(3, 11);
        return "success";
    }
    catch (e) {
        log.debug("Log: {}", e);
        return "error";
    }
}
function createXML(session, event, localParams) {
    var x;
    session.s_xml1 = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><sms><user><username>SendSMSwhileOff</username><password>Aa87!6179</password></user><source>019</source><destinations><phone>";
    session.s_xml2 = "</phone></destinations><message>test</message><response>0</response></sms>";
    session.s_xml = session.xml1 + session.normalizedNumber + session.xml2;
    return "success";
}
function extractAndcompare(session, event, localParams) {
    var x;
    x = session.s_initialSIP_lib.SIP["P-Access-Network-Info"].cellId;
    if (x.substring(0, 5) == "42501") {
        return "1";
    }
    else if (x.substring(0, 5) == "42503") {
        return "2";
    }
    else {
        return "3";
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxDQUFDO0FBQUEsU0FBUyxlQUFlLENBQUMsT0FBYSxFQUFFLEtBQVcsRUFBRSxXQUFnQjtJQUV0RSxJQUFJLEdBQUcsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDO0lBRXRCLElBQUk7UUFFRCxJQUFJLE9BQU8sU0FBUyxDQUFDO1FBQ3JCLE9BQU8sQ0FBQyxnQkFBZ0IsR0FBRyxLQUFLLENBQUM7UUFDakMsT0FBTyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDO1FBQzFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFDckMsT0FBTyxDQUFDLGtCQUFrQixHQUFHLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBRXRELE9BQU8sU0FBUyxDQUFDO0tBRW5CO0lBQUMsT0FBTyxDQUFDLEVBQUU7UUFFVCxHQUFHLENBQUMsS0FBSyxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUN4QixPQUFPLE9BQU8sQ0FBQztLQUNqQjtBQUdELENBQUM7QUFHRCxTQUFTLFNBQVMsQ0FBQyxPQUFhLEVBQUUsS0FBVyxFQUFFLFdBQWdCO0lBRTVELElBQUksQ0FBVSxDQUFDO0lBQ2YsT0FBTyxDQUFDLE1BQU0sR0FBRSx5S0FBeUssQ0FBQztJQUUxTCxPQUFPLENBQUMsTUFBTSxHQUFFLDRFQUE0RSxDQUFDO0lBRTdGLE9BQU8sQ0FBQyxLQUFLLEdBQUUsT0FBTyxDQUFDLElBQUksR0FBRyxPQUFPLENBQUMsZ0JBQWdCLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQztJQUV0RSxPQUFPLFNBQVMsQ0FBQztBQUVwQixDQUFDO0FBRUQsU0FBUyxpQkFBaUIsQ0FBQyxPQUFhLEVBQUUsS0FBVyxFQUFFLFdBQWdCO0lBRXBFLElBQUksQ0FBVSxDQUFDO0lBQ2YsQ0FBQyxHQUFFLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxHQUFHLENBQUMsdUJBQXVCLENBQUMsQ0FBQyxNQUFNLENBQUE7SUFFL0QsSUFBSSxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsSUFBRyxPQUFPLEVBQzlCO1FBQ0csT0FBTyxHQUFHLENBQUM7S0FDYjtTQUNJLElBQUksQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLElBQUcsT0FBTyxFQUNuQztRQUNHLE9BQU8sR0FBRyxDQUFDO0tBQ2I7U0FDRztRQUNELE9BQU8sR0FBRyxDQUFDO0tBQ2I7QUFDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy9NQUlOQkxPQ0tcbjtmdW5jdGlvbiBub3JtYWxpemF0aW9uXzEoc2Vzc2lvbiA6IGFueSwgZXZlbnQgOiBhbnksIGxvY2FsUGFyYW1zOiBhbnkgKXtcblxubGV0IGxvZyA9IHNlc3Npb24ubG9nO1xuXG50cnkge1xuXG4gICBsZXQgZnJvbVVSSSA6IHN0cmluZztcbiAgIHNlc3Npb24uc19pbml0aWFsU0lQX2xpYiA9IGV2ZW50O1xuICAgZnJvbVVSSSA9IGV2ZW50LlNJUC5Gcm9tLmFkZHJlc3MudXJpLnVzZXI7ICAvLzk3MjUwNzAwMDExOFxuICAgbG9nLmRlYnVnKFwiTG9nIEZyb20tMToge31cIiwgZnJvbVVSSSk7XG4gICBzZXNzaW9uLnNfbm9ybWFsaXplZE51bWJlciA9IGZyb21VUkkuc3Vic3RyaW5nKDMsIDExKTtcblxuICAgcmV0dXJuIFwic3VjY2Vzc1wiO1xuXG59IGNhdGNoIChlKSB7XG5cbiAgIGxvZy5kZWJ1ZyhcIkxvZzoge31cIiwgZSk7XG4gICByZXR1cm4gXCJlcnJvclwiO1xufVxuXG5cbn1cblxuXG5mdW5jdGlvbiBjcmVhdGVYTUwoc2Vzc2lvbiA6IGFueSwgZXZlbnQgOiBhbnksIGxvY2FsUGFyYW1zOiBhbnkgKXtcblxuICAgbGV0IHggOiBzdHJpbmc7XG4gICBzZXNzaW9uLnNfeG1sMT0gXCI8P3htbCB2ZXJzaW9uPVxcXCIxLjBcXFwiIGVuY29kaW5nPVxcXCJVVEYtOFxcXCI/PjxzbXM+PHVzZXI+PHVzZXJuYW1lPlNlbmRTTVN3aGlsZU9mZjwvdXNlcm5hbWU+PHBhc3N3b3JkPkFhODchNjE3OTwvcGFzc3dvcmQ+PC91c2VyPjxzb3VyY2U+MDE5PC9zb3VyY2U+PGRlc3RpbmF0aW9ucz48cGhvbmU+XCI7XG5cbiAgIHNlc3Npb24uc194bWwyPSBcIjwvcGhvbmU+PC9kZXN0aW5hdGlvbnM+PG1lc3NhZ2U+dGVzdDwvbWVzc2FnZT48cmVzcG9uc2U+MDwvcmVzcG9uc2U+PC9zbXM+XCI7XG5cbiAgIHNlc3Npb24uc194bWw9IHNlc3Npb24ueG1sMSArIHNlc3Npb24ubm9ybWFsaXplZE51bWJlciArIHNlc3Npb24ueG1sMjtcblxuICAgcmV0dXJuIFwic3VjY2Vzc1wiO1xuXG59XG5cbmZ1bmN0aW9uIGV4dHJhY3RBbmRjb21wYXJlKHNlc3Npb24gOiBhbnksIGV2ZW50IDogYW55LCBsb2NhbFBhcmFtczogYW55ICl7XG5cbiAgIGxldCB4IDogc3RyaW5nO1xuICAgeD0gc2Vzc2lvbi5zX2luaXRpYWxTSVBfbGliLlNJUFtcIlAtQWNjZXNzLU5ldHdvcmstSW5mb1wiXS5jZWxsSWRcblxuICAgaWYgKHguc3Vic3RyaW5nKDAsNSkgPT1cIjQyNTAxXCIpXG4gICB7XG4gICAgICByZXR1cm4gXCIxXCI7XG4gICB9XG4gICBlbHNlIGlmICh4LnN1YnN0cmluZygwLDUpID09XCI0MjUwM1wiKVxuICAge1xuICAgICAgcmV0dXJuIFwiMlwiO1xuICAgfVxuICAgZWxzZXtcbiAgICAgIHJldHVybiBcIjNcIjtcbiAgIH1cbn1cblxuXG4iXX0=