"use strict";
;
var Capabilities;
(function (Capabilities) {
    Capabilities["REL1XX"] = "REL1XX";
    Capabilities["FORKING"] = "FORKING";
    Capabilities["PRECONDITION"] = "PRECONDITION";
    Capabilities["PEM"] = "PEM";
    Capabilities["UPDATE"] = "UPDATE";
})(Capabilities || (Capabilities = {}));
var Annotype;
(function (Annotype) {
    Annotype["CONNECT"] = "CONNECT";
    Annotype["RINGING"] = "RING";
    Annotype["WELCOME"] = "WELCOME";
})(Annotype || (Annotype = {}));
var CallPollActionType;
(function (CallPollActionType) {
    CallPollActionType["Accept"] = "accept";
    CallPollActionType["Forward"] = "forward";
    CallPollActionType["Reject"] = "reject";
})(CallPollActionType || (CallPollActionType = {}));
var CallStartActionType;
(function (CallStartActionType) {
    CallStartActionType[CallStartActionType["Abort"] = 0] = "Abort";
    CallStartActionType[CallStartActionType["Forward"] = 1] = "Forward";
    CallStartActionType[CallStartActionType["RejectMrf"] = 2] = "RejectMrf";
})(CallStartActionType || (CallStartActionType = {}));
var MediaOperationActionType;
(function (MediaOperationActionType) {
    MediaOperationActionType["PerformMediaOperation"] = "performMediaOperation";
})(MediaOperationActionType || (MediaOperationActionType = {}));
var MediaOperationContentType;
(function (MediaOperationContentType) {
    MediaOperationContentType["MSML"] = "application/msml+xml";
})(MediaOperationContentType || (MediaOperationContentType = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxDQUFDO0FBVUQsSUFBSyxZQU1KO0FBTkQsV0FBSyxZQUFZO0lBQ2YsaUNBQWlCLENBQUE7SUFDakIsbUNBQWtCLENBQUE7SUFDbEIsNkNBQTJCLENBQUE7SUFDM0IsMkJBQVMsQ0FBQTtJQUNULGlDQUFlLENBQUE7QUFDakIsQ0FBQyxFQU5JLFlBQVksS0FBWixZQUFZLFFBTWhCO0FBc0RELElBQUssUUFJSjtBQUpELFdBQUssUUFBUTtJQUNYLCtCQUFtQixDQUFBO0lBQ25CLDRCQUFnQixDQUFBO0lBQ2hCLCtCQUFtQixDQUFBO0FBQ3JCLENBQUMsRUFKSSxRQUFRLEtBQVIsUUFBUSxRQUlaO0FBdUJELElBQUssa0JBSUo7QUFKRCxXQUFLLGtCQUFrQjtJQUN0Qix1Q0FBaUIsQ0FBQTtJQUNqQix5Q0FBbUIsQ0FBQTtJQUNuQix1Q0FBaUIsQ0FBQTtBQUNsQixDQUFDLEVBSkksa0JBQWtCLEtBQWxCLGtCQUFrQixRQUl0QjtBQUVELElBQUssbUJBSUo7QUFKRCxXQUFLLG1CQUFtQjtJQUN2QiwrREFBUyxDQUFBO0lBQ1QsbUVBQVcsQ0FBQTtJQUNYLHVFQUFhLENBQUE7QUFDZCxDQUFDLEVBSkksbUJBQW1CLEtBQW5CLG1CQUFtQixRQUl2QjtBQWdDRCxJQUFLLHdCQUVKO0FBRkQsV0FBSyx3QkFBd0I7SUFDNUIsMkVBQStDLENBQUE7QUFDaEQsQ0FBQyxFQUZJLHdCQUF3QixLQUF4Qix3QkFBd0IsUUFFNUI7QUFFRCxJQUFLLHlCQUVKO0FBRkQsV0FBSyx5QkFBeUI7SUFDN0IsMERBQTZCLENBQUE7QUFDOUIsQ0FBQyxFQUZJLHlCQUF5QixLQUF6Qix5QkFBeUIsUUFFN0IiLCJzb3VyY2VzQ29udGVudCI6WyIvL01BSU5CTE9DS1xuOy8vaW50ZXJmYWNlIGRlZmluaXRpb25cblxuaW50ZXJmYWNlIExlZyB7XG4gIGFkZHJlc3MgOiBzdHJpbmc7XG4gIG5hbWUgOiBzdHJpbmdcbn1cbmludGVyZmFjZSBDYWxsIHtcbiAgc3RhdGUgOiBudW1iZXJcbn1cblxuZW51bSBDYXBhYmlsaXRpZXMge1xuICBSRUwxWFggPSBcIlJFTDFYWFwiLFxuICBGT1JLSU5HPSBcIkZPUktJTkdcIixcbiAgUFJFQ09ORElUSU9OPVwiUFJFQ09ORElUSU9OXCIsXG4gIFBFTT1cIlBFTVwiLFxuICBVUERBVEU9XCJVUERBVEVcIlxufVxuXG5pbnRlcmZhY2UgTWVzc2FnZSB7XG4gIG1ldGhvZCA6IFtzdHJpbmddO1xuICB0eXBlIDogW3N0cmluZ107XG4gIGJvZHkgOiBbc3RyaW5nXVxufVxuXG5pbnRlcmZhY2UgU0lQIHtcbiAgY2FwYWJpbGl0aWVzIDogW0NhcGFiaWxpdGllc107XG4gIG1lc3NhZ2UgOiBNZXNzYWdlXG59XG5cbmludGVyZmFjZSBDYWxsU3RhcnQge1xuICBjb250YWN0IDogc3RyaW5nO1xuICBjYXVzZTogc3RyaW5nO1xuICBsZWcgOiBzdHJpbmdcbn1cblxuaW50ZXJmYWNlIENhbGxQb2xsIHtcbiAgbmFtZTogc3RyaW5nO1xuICB0eXBlOiBzdHJpbmc7XG4gIGxlZzogc3RyaW5nXG59XG5cbmludGVyZmFjZSBFdmVudCB7XG4gIG5hbWUgOiBzdHJpbmc7XG4gIGNhbGxTdGFydD8gOiBDYWxsU3RhcnQ7XG4gIGNhbGxQb2xsPyA6IENhbGxQb2xsXG59XG5cblxuaW50ZXJmYWNlIE9DQ1BFdmVudCB7XG4gIGNhbGxpZCA6IHN0cmluZztcbiAgY2FsbCA6IENhbGw7XG4gIGFzIDogc3RyaW5nO1xuICBldmVudHRpbWUgOiBudW1iZXI7XG4gIFNJUCA6IFNJUDtcbiAgZXZlbnQ6IEV2ZW50XG59XG5cbmludGVyZmFjZSBFdmVudHMge1xuICBTdWNjZXNzUmVzcG9uc2VQb2xsRXZlbnQ/IDogc3RyaW5nO1xuICBSYXdDb250ZW50UG9sbEV2ZW50PyA6IHN0cmluZztcbiAgSW5mb1BvbGxFdmVudD86IHN0cmluZ1xufVxuLyoqXG4gIERlZmluZSBoZWFkZXIgdmFyaWFibGVzIHVzZWQgYnkgYXBwbGljYXRpb25cbiovXG5pbnRlcmZhY2UgSGVhZGVyVmFycyB7XG4gIGRpc2FibGVTZW5kRGVmYXVsdFJlYXNvbj8gOiBzdHJpbmc7XG4gIGRpc2FibGVTZW5kTm9BbnN3ZXJSZWFzb24/IDogc3RyaW5nXG59XG5cbmVudW0gQW5ub3R5cGUge1xuICBDT05ORUNUID0gXCJDT05ORUNUXCIsXG4gIFJJTkdJTkcgPSBcIlJJTkdcIixcbiAgV0VMQ09NRSA9IFwiV0VMQ09NRVwiXG59XG5cbmludGVyZmFjZSBSaW5naW5nVG9uZSB7XG4gIGFubm9fbmFtZSA6IHN0cmluZztcbiAgYW5ub190eXBlIDogQW5ub3R5cGVcbn1cblxuaW50ZXJmYWNlIFNlc3Npb24ge1xuICBsb2cgOiBhbnk7XG4gIGluQ2FwYWJpbGl0aWVzIDogW0NhcGFiaWxpdGllc107XG4gIG91dENhcGFiaWxpdGllcz8gOiBzdHJpbmc7XG4gIGV2ZW50cz8gOiBzdHJpbmc7XG4gIGhlYWRlcnJ1bGV2YXI/IDogc3RyaW5nO1xuICBoZWFkZXJydWxlc3NlbGVjdD8gOiBzdHJpbmc7XG4gIHJpbmdpbmd0b25lcz8gOiBzdHJpbmc7XG4gIHNlbmRBY3Rpb24/IDogc3RyaW5nIDtcbiAgU0lQSGVscGVyIDogYW55O1xuICBTSVBJbml0aWFsSW52aXRlPyA6IGFueTtcbiAgU0lQTWVzc2FnZT8gOiBhbnk7XG4gIFNJUE1lc3NhZ2VUeXBlPyA6IGFueVxufVxuXG5cbmVudW0gQ2FsbFBvbGxBY3Rpb25UeXBlIHtcbiBBY2NlcHQgPSBcImFjY2VwdFwiLFxuIEZvcndhcmQgPSBcImZvcndhcmRcIixcbiBSZWplY3QgPSBcInJlamVjdFwiLFxufVxuXG5lbnVtIENhbGxTdGFydEFjdGlvblR5cGUge1xuIEFib3J0ID0gMCxcbiBGb3J3YXJkID0gMSxcbiBSZWplY3RNcmYgPSAyXG59XG5cblxuXG4vKipcbiBTZXQgYWN0aW9uIGZvciBDYWxsU3RhcnQgZXZlbnRcbiovXG5pbnRlcmZhY2UgQ2FsbFN0YXJ0QWN0aW9uIHtcbiB0eXBlIDogQ2FsbFN0YXJ0QWN0aW9uVHlwZTtcbiBlcnJvcmNvZGUgOiBudW1iZXI7XG4gY2F1c2UgOiBzdHJpbmcgO1xuIHVyaSA6IHN0cmluZztcbiBlYXJseW1lZGlhIDogbnVtYmVyO1xuIGxlZ25hbWUgOiBzdHJpbmcgXG59XG5cbi8qKlxuIFNldCBhY3Rpb24gZm9yIENhbGxQb2xsIGV2ZW50XG4qL1xuaW50ZXJmYWNlIENhbGxQb2xsQWN0aW9uIHtcbiB0eXBlIDogQ2FsbFBvbGxBY3Rpb25UeXBlXG59XG5cblxuLyoqXG4gQXBwbGljYXRpb24gY2FuIHNldCBhY3Rpb24gZm9yIGEgc3BlY2lmaWMgbGVnLCB0aGlzIGlzIGFwcGxpY2FibGUgZm9yIE1SRiBjb250YWN0XG4gKi9cbmludGVyZmFjZSBMZWdBY3Rpb24ge1xuIHR5cGUgOiBDYWxsU3RhcnRBY3Rpb25UeXBlIDtcbiBsZWdhY3Rpb24gOiBzdHJpbmdcbn1cblxuZW51bSBNZWRpYU9wZXJhdGlvbkFjdGlvblR5cGUge1xuIFBlcmZvcm1NZWRpYU9wZXJhdGlvbiA9IFwicGVyZm9ybU1lZGlhT3BlcmF0aW9uXCJcbn1cblxuZW51bSBNZWRpYU9wZXJhdGlvbkNvbnRlbnRUeXBlIHtcbiBNU01MID0gXCJhcHBsaWNhdGlvbi9tc21sK3htbFwiXG59XG5cbmludGVyZmFjZSBQZXJmb3JtTWVkaWFPcGVyYXRpb24ge1xuIENvbnRlbnRUeXBlIDogTWVkaWFPcGVyYXRpb25Db250ZW50VHlwZTtcbiBDb250ZW50IDogc3RyaW5nXG59XG5cbmludGVyZmFjZSBNZWRpYU9wZXJhdGlvbkFjdGlvbiB7XG4gdHlwZSA6IG51bWJlcjtcbiBsZWdhY3Rpb24gOiBNZWRpYU9wZXJhdGlvbkFjdGlvblR5cGU7XG4gcGVyZm9ybU1lZGlhT3BlcmF0aW9uIDogUGVyZm9ybU1lZGlhT3BlcmF0aW9uXG59XG5cbmludGVyZmFjZSBBY3Rpb24ge1xuIGFjdGlvbiA6IGFueSBcbn1cblxuXG5pbnRlcmZhY2UgSGVhZGVyIHtcbiBoZWFkZXIgOiBzdHJpbmc7XG4gdmFsdWUgOiBzdHJpbmc7XG59XG5cbmludGVyZmFjZSBRSGVhZGVyIHtcbiBQcml2YWN5IDogc3RyaW5nO1xuIFJlYXNvbiA6IHN0cmluZyA7XG59XG5cbmludGVyZmFjZSBQYXJhbWV0ZXIge1xuIHRyYW5zcG9ydCA6IHN0cmluZztcbiB1c2VyIDogc3RyaW5nIDtcbn1cblxuaW50ZXJmYWNlIFVSSSB7XG4gc2NoZW1lIDogc3RyaW5nO1xuIGF1dGhvcml0eSA6IHN0cmluZyA7XG4gZ3IgOiBzdHJpbmcgO1xuIGhvc3Q6IHN0cmluZyA7XG4gbHIgOiBzdHJpbmcgO1xuIG1hZGRyIDogc3RyaW5nIDtcbiBwb3J0IDogbnVtYmVyICA7XG4gdXNlciA6IHN0cmluZyA7XG4gcGFyYW1ldGVycyA6IFtQYXJhbWV0ZXJdO1xuIHFoZWFkZXIgOiBbUUhlYWRlcl07XG59XG5cbmludGVyZmFjZSBBZGRyZXNzIHtcbiBkaXNwbGF5TmFtZSA6IHN0cmluZztcbiB1cmkgOiBVUkkgXG59XG5cbmludGVyZmFjZSBIaXN0b3J5SW5mbyBpbXBsZW1lbnRzIEhlYWRlciB7XG4gYWRkcmVzcyA6IEFkZHJlc3M7XG4gaW5kZXggOiBzdHJpbmdcbn1cblxuaW50ZXJmYWNlIFBBSSBpbXBsZW1lbnRzIEhlYWRlciAge1xuIGFkZHJlc3MgOiBBZGRyZXNzXG59XG5cbmludGVyZmFjZSBGcm9tIGltcGxlbWVudHMgSGVhZGVyIHtcbiBhZGRyZXNzIDogQWRkcmVzcztcbiB0YWcgOiBzdHJpbmcgO1xufVxuXG5pbnRlcmZhY2UgVG8gaW1wbGVtZW50cyBIZWFkZXIge1xuIGFkZHJlc3MgOiBBZGRyZXNzO1xuIHRhZyA6IHN0cmluZztcbn1cblxuaW50ZXJmYWNlIFBDViBpbXBsZW1lbnRzIEhlYWRlciB7XG4gaWNpZF9nZW5lcmF0ZWRfYXQ6IHN0cmluZyA7XG4gaWNpZF92YWx1ZSA6IHN0cmluZyA7XG4gb2FpZCA6IHN0cmluZztcbiB0YWlkIDogc3RyaW5nO1xuIG9zaWQgOiBzdHJpbmc7XG4gdHNpZCA6IHN0cmluZztcbn1cblxuaW50ZXJmYWNlIFJlc3VsdENvZGUge1xuICByZXN1bHRDb2RlIDogc3RyaW5nIDtcbn1cbiJdfQ==